---
# Update basebox, we don't known when it was build
- name: Upgrade the base system
  apt:
    upgrade: safe
    update_cache: yes

- name: Install dependencies
  apt:
    pkg: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - ca-certificates # for SSL certs
    - localepurge     # strip unnecessary locales => save disk space
    - curl            # download files...
    - python-pip      # needed for ansible pip tasks
    - unattended-upgrades # do automatic updates for the VM
    - docker.io
    - ifupdown
    - avahi-daemon    # Avahi in VirtualBox to be fully network visible
    - avahi-utils     # To run `avahi-browse --all --resolve --terminate`
    - tree            # To list /data contents nicely if debugging

# Avahi must be running on the VirtualBox host so that it is properly visible
# on the local network. Running from inside the Docker container with ports
# exposed and forwarded wasn't enough to get all network advertisements visible.
- name: Install Avahi config
  copy:
    src: avahi-services/
    dest: /etc/avahi/services/
    mode: 0644

- name: Install rc.local with extra Avahi commands
  copy:
    src: rc.local
    dest: /etc/
    mode: 0744

# This key enables us to SSH directly into the Docker container on start
# source: <https://raw.githubusercontent.com/hashicorp/vagrant/master/keys/vagrant>
# Note that the SSH key used on 'vagrant ssh' is a separate one, and it is stored at
# ~/.vagrant.d/boxes/seravo-VAGRANTSLASH-wordpress/NNNNNNN.0.0/virtualbox/vagrant_private_key
- name: Add vagrant private key
  copy:
    src: vagrant.key
    dest: /home/vagrant/.ssh/id_rsa_vagrant
    mode: 0600
    owner: vagrant
    group: vagrant

# pull docker image, create container
- name: Copy Seravo Controller script
  copy:
    src: sc.sh
    dest: /usr/sbin/sc
    mode: 0755
    owner: root
    group: root

- name: Create data mount directory placeholder
  file:
    dest: /data/wordpress
    state: directory
    mode: 0755
    owner: root
    group: root

# Create flag file to ensure SC does not forward SSH shells to the Docker
# container but runs all commands issued by Ansible provisioning on host.
# This will automatically disappear when the box is restarted and there is a new
# /data/wordpress date mount in place.
# Populate the flag with some sensible text so in case it accidentally is left
# behind, it will be easier for somebody to debug where the file came from.
- name: Create flag file for docker shell
  lineinfile:
    regexp: '^1'
    path: /data/wordpress/.seravo-controller-shell
    mode: 0644
    owner: vagrant
    group: root
    create: yes
    line: 'Vagrant Ansible provisioning placeholder'

# Allow user to choose wheter she likes to enter Docker or host VM
# if /data/wordpress/.seravo-controller-shell exists, user won't be forwarded to container
- name: Add check for flag file
  lineinfile:
    state: present
    regexp: 'exec /usr/sbin/sc shell$'
    line: '[ ! -e "/data/wordpress/.seravo-controller-shell" ] && exec /usr/sbin/sc shell'
    dest: '{{ item }}/.bashrc'
  with_items:
    - /home/vagrant
    - /root

# Ensure the commands the Vagrantfile issues in non-interactive mode are not
# run on the host but passed on to the Docker container.
- name: Create wrappers for necessary Vagrantfile commands
  copy:
    src: wp-wrapper
    dest: "/usr/local/bin/{{ item }}"
    mode: 0755
    owner: root
    group: root
  with_items:
    - composer
    - wp-activate-git-hooks
    - wp-generate-ssl
    - wp-restart-nginx
    - wp-use-asset-proxy
    - wp-pull-production-db
    - wp-pull-production-themes
    - wp-pull-production-plugins
    - wp-vagrant-dump-db
    - wp-vagrant-import-db
    - wp-test
    - s-test-commands

# Ensure the commands the Vagrantfile issues in interactive mode are not
# run on the host but passed on to the Docker container.
- name: Create interactive wrappers for necessary Vagrantfile commands
  copy:
    src: wp-wrapper-interactive
    dest: "/usr/local/bin/{{ item }}"
    mode: 0755
    owner: root
    group: root
  with_items:
    - wp
    - wp-development-up

# Move here all commands that have been deprecated from the Vagrantfile
- name: Create noop-wrappers for obsolete commands
  copy:
    src: wp-wrapper-noop
    dest: "/usr/local/bin/{{ item }}"
    mode: 0755
    owner: root
    group: root
  with_items:
    - wp-vagrant-activation
    - wp-watch-logs

# Delay Docker start until Vagrant finishes mounting /data before Docker
# mounts /data:/data
- name: Create directory structure for systemd override
  file:
    path: /etc/systemd/system/seravo-controller.service.d
    state: directory
    owner: root
    group: root
    mode: 0755
    recurse: yes

- name: Delay Seravo Controller start until /data/wordpress is mounted
  copy:
    src: "delay.conf"
    dest: "/etc/systemd/system/seravo-controller.service.d/delay.conf"
    mode: 0644
    owner: root
    group: root

# Keep the Docker host motd silent and rely on the motd emitted by the container
- name: Clean away excess motd messages
  file:
    path: "/etc/{{ item }}"
    state: absent
  with_items:
    - update-motd.d
    - motd

- name: Silence the host last login line from SSH as unnecessary in Vagrant box
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^PrintLastLog no'
    line: 'PrintLastLog no'

- name: Add Seravo Controller systemd service definition
  copy:
    src: seravo-controller.service
    dest: /etc/systemd/system/seravo-controller.service
    mode: 0644
    owner: root
    group: root

- name: Configure Seravo Controller systemd services
  systemd:
    daemon_reload: yes
    enabled: yes
    state: stopped
    name: seravo-controller

- name: Add user 'vagrant' to group 'docker' so it can run Docker commands
  user:
    name: vagrant
    groups: docker

- name: Pull Docker image
  shell: /usr/sbin/sc pull

- name: Ensure there are no running containers when provision ends
  shell: docker ps
  register: docker_containers_running

- debug:
    msg: "{{ docker_containers_running.stdout_lines }}"

# Create file that contains build timestamp
- name: Create build timestamp file
  shell: echo "vagrant-$(date --iso-8601=ns)" > /buildtime
