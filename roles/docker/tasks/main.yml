---
# Update basebox, we don't known when it was build
- name: upgrade the system
  apt:
    upgrade: safe
    update_cache: yes

- name: install dependencies
  apt:
    pkg: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - ca-certificates # for SSL certs
    - localepurge     # strip unnecessary locales => save disk space
    - curl            # download files...
    - python-pip      # needed for ansible pip tasks
    - unattended-upgrades # do automatic updates for the VM

# Read APT key for Docker repository from file
# (this prevents MITM quite effectively!)
- name: add apt key for docker
  apt_key:
    data: "{{ lookup('file', 'docker.asc') }}"
    state: present
    keyring: /etc/apt/trusted.gpg.d/docker.gpg

# We want to use upstream Docker-CE
- name: add apt repository for docker
  apt_repository:
    filename: docker
    state: present
    update_cache: yes
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable"

- name: install docker-ce
  apt:
    pkg: docker-ce
    state: present

# this allows us to SSH directly into the Docker container on start
# source: <https://raw.githubusercontent.com/hashicorp/vagrant/master/keys/vagrant>
- name: add vagrant private key
  copy:
    src: vagrant.key
    dest: /home/vagrant/.ssh/id_rsa_vagrant
    mode: 0600
    owner: vagrant
    group: vagrant

# To make it easier to run commands inside docker, which in turn is in VM
- name: create custom shell for jumping to docker
  copy:
    src: dockershell
    dest: /bin/dockershell
    mode: 0755
    owner: root
    group: root

# pull docker image, create container
- name: copy helper script
  copy:
    src: docker-rebuild.sh
    dest: /usr/local/sbin/docker-rebuild
    mode: 0755
    owner: root
    group: root

- name: pull docker image and create container
  shell: /usr/local/sbin/docker-rebuild pull-and-create

# Create flag file: do not jump to docker if file exists
- name: create flag file for dockershell
  lineinfile:
    regexp: '^1'
    dest: /home/vagrant/.nodocker
    mode: 0644
    owner: vagrant
    group: root
    create: yes
    line: '1'

# Allow user to choose wheter she likes to enter Docker or host VM
# if ~/.nodocker exists, user won't be forwarded to container
- name: add check for flag file
  lineinfile:
    state: present
    regexp: 'exec /bin/dockershell$'
    line: '[ ! -e "${HOME}/.nodocker" ] && exec /bin/dockershell'
    dest: '{{ item }}/.bashrc'
  with_items:
    - /home/vagrant
    - /root

# Because old WordPress repository configs expects these to be found inside VM,
# add wrappers that execute the same commands inside Docker
- name: create wrappers for wp-* commands
  copy:
    src: wp-wrapper
    dest: "/usr/local/bin/{{ item }}"
    mode: 0755
    owner: root
    group: root
  with_items:
    - composer
    - wp
    - wp-activate-git-hooks
    - wp-generate-ssl
    - wp-restart-nginx
    - wp-use-asset-proxy
    - wp-vagrant-activation
    - wp-vagrant-dump-db
    - wp-vagrant-import-db
    - wp-watch-logs

# Delay docker start vagrant finishes mounting /data before docker
# mounts /data:/data
- name: create directory structure for systemd override
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
    owner: root
    group: root
    mode: 0755
    recurse: yes

- name: add delay helper
  copy:
    src: wait-mounts.sh
    dest: /usr/local/sbin/wait-mounts.sh
    mode: 0755
    owner: root
    group: root

- name: delay docker start
  copy:
    src: delay.conf
    dest: /etc/systemd/system/docker.service.d/delay.conf
    mode: 0644
    owner: root
    group: root

# Customize MOTD (message of the day)
# This allows us to show links etc. when user logs in
- name: remove upstream motd
  file:
    path: /etc/update-motd.d
    state: absent

- name: re-create motd path
  file:
    path: /etc/update-motd.d
    state: directory
    owner: root
    group: root
    mode: 0755

- name: add motd
  copy:
    src: motd
    dest: /etc/motd
    mode: 0644
    owner: root
    group: root

# create file that contains build timestamp
- name: create build timestamp file
  shell: echo "vagrant-$(date --iso-8601=ns)" >/buildtime
